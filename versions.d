import std.stdio;

void main()
{
    // Oficial versions
    version (DigitalMars) writeln("DigitalMars");
    version (GNU)  writeln("GNU");
    version (LDC) writeln("LDC");
    version (SDC) writeln("SDC");
    version (Windows) writeln("Windows");
    version (Win32) writeln("Win32");
    version (Win64) writeln("Win64");
    version (linux) writeln("linux");
    version (OSX) writeln("OSX");
    version (iOS) writeln("iOS");
    version (TVOS) writeln("TVOS");
    version (WatchOS) writeln("WatchOS");
    version (VisionOS) writeln("VisionOS");
    version (FreeBSD) writeln("FreeBSD");
    version (OpenBSD) writeln("OpenBSD");
    version (NetBSD) writeln("NetBSD");
    version (DragonFlyBSD) writeln("DragonFlyBSD");
    version (BSD) writeln("BSD");
    version (Solaris) writeln("Solaris");
    version (Posix) writeln("Posix");
    version (AIX) writeln("AIX");
    version (Haiku) writeln("Haiku");
    version (SkyOS) writeln("SkyOS");
    version (SysV3) writeln("SysV3");
    version (SysV4) writeln("SysV4");
    version (Hurd) writeln("Hurd");
    version (Android) writeln("Android");
    version (Emscripten) writeln("Emscripten");
    version (PlayStation) writeln("PlayStation");
    version (PlayStation4) writeln("PlayStation4");
    version (Cygwin) writeln("Cygwin");
    version (MinGW) writeln("MinGW");
    version (FreeStanding) writeln("FreeStanding");
    version (CRuntime_Bionic) writeln("CRuntime_Bionic");
    version (CRuntime_DigitalMars) writeln("CRuntime_DigitalMars");
    version (CRuntime_Glibc) writeln("CRuntime_Glibc");
    version (CRuntime_Microsoft) writeln("CRuntime_Microsoft");
    version (CRuntime_Musl) writeln("CRuntime_Musl");
    version (CRuntime_Newlib) writeln("CRuntime_Newlib");
    version (CRuntime_UClibc) writeln("CRuntime_UClibc");
    version (CRuntime_WASI) writeln("CRuntime_WASI");
    version (CppRuntime_Clang) writeln("CppRuntime_Clang");
    version (CppRuntime_DigitalMars) writeln("CppRuntime_DigitalMars");
    version (CppRuntime_Gcc) writeln("CppRuntime_Gcc");
    version (CppRuntime_Microsoft) writeln("CppRuntime_Microsoft");
    version (CppRuntime_Sun) writeln("CppRuntime_Sun");
    version (X86) writeln("X86");
    version (X86_64) writeln("X86_64");
    version (ARM) writeln("ARM");
    version (ARM_Thumb) writeln("ARM_Thumb");
    version (ARM_SoftFloat) writeln("ARM_SoftFloat");
    version (ARM_SoftFP) writeln("ARM_SoftFP");
    version (ARM_HardFloat) writeln("ARM_HardFloat");
    version (AArch64) writeln("AArch64");
    version (AsmJS) writeln("AsmJS");
    version (AVR) writeln("AVR");
    version (Epiphany) writeln("Epiphany");
    version (PPC) writeln("PPC");
    version (PPC_SoftFloat) writeln("PPC_SoftFloat");
    version (PPC_HardFloat) writeln("PPC_HardFloat");
    version (PPC64) writeln("PPC64");
    version (IA64) writeln("IA64");
    version (MIPS32) writeln("MIPS32");
    version (MIPS64) writeln("MIPS64");
    version (MIPS_O32) writeln("MIPS_O32");
    version (MIPS_N32) writeln("MIPS_N32");
    version (MIPS_O64) writeln("MIPS_O64");
    version (MIPS_N64) writeln("MIPS_N64");
    version (MIPS_EABI) writeln("MIPS_EABI");
    version (MIPS_SoftFloat) writeln("MIPS_SoftFloat");
    version (MIPS_HardFloat) writeln("MIPS_HardFloat");
    version (MSP430) writeln("MSP430");
    version (NVPTX) writeln("NVPTX");
    version (NVPTX64) writeln("NVPTX64");
    version (RISCV32) writeln("RISCV32");
    version (RISCV64) writeln("RISCV64");
    version (SPARC) writeln("SPARC");
    version (SPARC_V8Plus) writeln("SPARC_V8Plus");
    version (SPARC_SoftFloat) writeln("SPARC_SoftFloat");
    version (SPARC_HardFloat) writeln("SPARC_HardFloat");
    version (SPARC64) writeln("SPARC64");
    version (S390) writeln("S390");
    version (SystemZ) writeln("SystemZ");
    version (HPPA) writeln("HPPA");
    version (HPPA64) writeln("HPPA64");
    version (SH) writeln("SH");
    version (WebAssembly) writeln("WebAssembly");
    version (WASI) writeln("WASI");
    version (Alpha) writeln("Alpha");
    version (Alpha_SoftFloat) writeln("Alpha_SoftFloat");
    version (Alpha_HardFloat) writeln("Alpha_HardFloat");
    version (LittleEndian) writeln("LittleEndian");
    version (BigEndian) writeln("BigEndian");
    version (ELFv1) writeln("ELFv1");
    version (ELFv2) writeln("ELFv2");
    version (D_BetterC) writeln("D_BetterC");
    version (D_Exceptions) writeln("D_Exceptions");
    version (D_ModuleInfo) writeln("D_ModuleInfo");
    version (D_TypeInfo) writeln("D_TypeInfo");
    version (D_Coverage) writeln("D_Coverage");
    version (D_Ddoc) writeln("D_Ddoc");
    version (D_InlineAsm_X86) writeln("D_InlineAsm_X86");
    version (D_InlineAsm_X86_64) writeln("D_InlineAsm_X86_64");
    version (D_LP64) writeln("D_LP64");
    version (D_X32) writeln("D_X32");
    version (D_HardFloat) writeln("D_HardFloat");
    version (D_SoftFloat) writeln("D_SoftFloat");
    version (D_PIC) writeln("D_PIC");
    version (D_PIE) writeln("D_PIE");
    version (D_SIMD) writeln("D_SIMD");
    version (D_AVX) writeln("D_AVX");
    version (D_AVX2) writeln("D_AVX2");
    version (D_Version2) writeln("D_Version2");
    version (D_NoBoundsChecks) writeln("D_NoBoundsChecks");
    version (D_ObjectiveC) writeln("D_ObjectiveC");
    version (D_ProfileGC) writeln("D_ProfileGC");
    version (D_Optimized) writeln("D_Optimized");
    version (Core) writeln("Core");
    version (Std) writeln("Std");
    version (unittest) writeln("unittest");
    version (assert) writeln("assert");
    version (D_PreConditions) writeln("D_PreConditions");
    version (D_PostConditions) writeln("D_PostConditions");
    version (D_Invariants) writeln("D_Invariants");
    // 2.105
    version (VisionOS) writeln("VisionOS");
    
    // GDC specific
    version (GNU_SjLj_Exceptions)   writeln("GNU_SjLj_Exceptions");
    version (GNU_SEH_Exceptions)    writeln("GNU_SEH_Exceptions");
    version (GNU_DWARF2_Exceptions) writeln("GNU_DWARF2_Exceptions");
    
    // LDC specific
    version (LLVM) writeln("LLVM");
    version (LDC_LLVM_2000) writeln("LDC_LLVM_2000");
    else version (LDC_LLVM_1900) writeln("LDC_LLVM_1900");
    else version (LDC_LLVM_1800) writeln("LDC_LLVM_1800");
    else version (LDC_LLVM_1700) writeln("LDC_LLVM_1700");
    else version (LDC_LLVM_1600) writeln("LDC_LLVM_1600");
    else version (LDC_LLVM_1500) writeln("LDC_LLVM_1500");
    else version (LDC_LLVM_1400) writeln("LDC_LLVM_1400");
    else version (LDC_LLVM_1300) writeln("LDC_LLVM_1300");
    else version (LDC_LLVM_1200) writeln("LDC_LLVM_1200");
    else version (LDC_LLVM_1100) writeln("LDC_LLVM_1100");
    else version (LDC_LLVM_1000) writeln("LDC_LLVM_1000");
    else version (LDC_LLVM_900)  writeln("LDC_LLVM_900");
    else version (LDC_LLVM_800)  writeln("LDC_LLVM_800");
    else version (LDC_LLVM_700)  writeln("LDC_LLVM_700");
    else version (LDC_LLVM_600)  writeln("LDC_LLVM_600");
    else version (LDC_LLVM_500)  writeln("LDC_LLVM_500");
    else version (LDC_LLVM_400)  writeln("LDC_LLVM_400");
    else version (LDC_LLVM_300)  writeln("LDC_LLVM_300");
    else version (LDC_LLVM_200)  writeln("LDC_LLVM_200");
    
    // Noticed in core.sys.freebsd.config
    version (FreeBSD_14) writeln("FreeBSD_14");
    else version (FreeBSD_13) writeln("FreeBSD_13");
    else version (FreeBSD_12) writeln("FreeBSD_12");
    else version (FreeBSD_11) writeln("FreeBSD_11");
    else version (FreeBSD_10) writeln("FreeBSD_10");
    else version (FreeBSD_9) writeln("FreeBSD_9");
    else version (FreeBSD_8) writeln("FreeBSD_8");
}
